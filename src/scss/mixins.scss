@import url('https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap');
@import './colors.scss';
@import '~@riapacheco/yutes/season/two.scss';

$auto-width: 87%;
$auto-width-mobile: 90%;
/* ---------------------------- RESPONSIVE WIDTHS --------------------------- */
@mixin auto-width {
  width: calc($auto-width);
  margin: auto;
}

@mixin auto-width-mobile {
  width: calc($auto-width-mobile);
  margin: auto;
}

/* ----------------------------------- UX ----------------------------------- */
@mixin remove-selection {
  -webkit-touch-callout: none; /* iOS Safari */
  -webkit-user-select: none; /* Safari */
   -khtml-user-select: none; /* Konqueror HTML */
     -moz-user-select: none; /* Old versions of Firefox */
      -ms-user-select: none; /* Internet Explorer/Edge */
          user-select: none; /* Non-prefixed version, currently
                                supported by Chrome, Edge, Opera and Firefox */
}
@mixin no-select {
  -webkit-touch-callout: none; /* iOS Safari */
  -webkit-user-select: none; /* Safari */
   -khtml-user-select: none; /* Konqueror HTML */
     -moz-user-select: none; /* Old versions of Firefox */
      -ms-user-select: none; /* Internet Explorer/Edge */
          user-select: none; /* Non-prefixed version, currently
                                supported by Chrome, Edge, Opera and Firefox */
}
@mixin antialiased {
  -webkit-font-smoothing: antialiased !important;
  -moz-osx-font-smoothing: grayscale !important;
}

/* -------------------------------- DEBUGGING ------------------------------- */
@mixin debug-red { border: 1px solid red; }
@mixin debug-red-thick { border: 4px solid red; }
@mixin debug-blue { border: 1px solid blue; }
@mixin debug-blue-thick { border: 4px solid blue; }
@mixin debug-grey { border: 1px solid grey; }
@mixin debug-grey-thick { border: 4px solid grey; }
@mixin debug-purple { border: 1px solid #cf63cf; }
@mixin debug-purple-thick { border: 4px solid #cf63cf; }
@mixin debug-yellow { border: 1px solid yellow; }
@mixin debug-yellow-thick { border: 4px solid yellow; }

/* -------------------------------- HEADINGS -------------------------------- */
@mixin h1-mobile {
  font-family: "Inter", sans-serif;
  letter-spacing: -0.09rem;
  font-size: 2.92rem;
  line-height: 1.2;
}

@mixin h2-mobile {
  font-family: "Inter", sans-serif;
  font-size: 2.3rem;
  line-height: 1.2;
}

@mixin h3-mobile {
  font-family: "Inter", sans-serif;
  font-size: 2.05rem;
}

@mixin h4-mobile {
  font-family: "Inter", sans-serif;
  font-size: 1.8rem;
}

@mixin body-text-mobile {
  font-size: 1.35rem;
  line-height: 1.85;
}

@mixin code-text-mobile {
  font-size: 1.2rem;
  letter-spacing: 0.03rem;
  line-height: 1.6;
}

/* ---------------------------- SPECIAL HEADINGS ---------------------------- */
@mixin h1-title {
  font-size: 6rem;
  line-height: 1;
  letter-spacing: -0.3rem;
  margin-block-start: -5px;
  margin-block-end: 5px;
  margin-inline-start: 0px;
  margin-inline-end: 0px;
  font-weight: 600;
}
@mixin h1-title-mobile {
  font-size: 4.6rem;
  line-height: 1;
  letter-spacing: -0.3rem;
  margin-block-start: -5px;
  margin-block-end: 5px;
  margin-inline-start: 0px;
  margin-inline-end: 0px;
  font-weight: 600;
}

@mixin h3-title {
  font-family: "Inter", sans-serif;
  font-size: 2.9rem;
  font-weight: 600;
  letter-spacing: -0.1rem;
}

@mixin h3-title-mobile {
  font-family: "Inter", sans-serif;
  font-size: 2.3rem;
  font-weight: 600;
  letter-spacing: -0.1rem;
}
/* --------------------------------- BUTTON --------------------------------- */
@mixin cta-btn {
  background-color: $black;
  color: $canary-regular;

  padding: 1rem 2.2rem 1rem 1.2rem;
  font-weight: 500;
  display: inline-flex;
  flex-flow: row nowrap;
  align-items: center;
  border-radius: 6px;
  font-size: 1.8rem;
  .material-icons {
    margin-right: 0.5rem;
    font-size: 1.7rem;
  }

  &:hover {
    background-color: $canary-regular;
    background-image: linear-gradient(to bottom right, $canary-medium, $canary-dark);
    box-shadow: 6px 8px 16px #00000050;
    color: $black;
  }
}

@mixin cta-btn-reverse {
  padding: 1rem 2.2rem 1rem 1.2rem;
  font-weight: 500;
  display: inline-flex;
  flex-flow: row nowrap;
  align-items: center;
  border-radius: 6px;
  font-size: 1.8rem;
  background-color: $canary-regular;
  background-image: linear-gradient(to bottom right, $canary-medium, $canary-dark);
  box-shadow: 6px 8px 16px #00000050;
  color: $black;


  .material-icons {
    margin-right: 0.5rem;
    font-size: 1.7rem;
  }

  &:hover {
    background-image: unset !important;
    background-color: $black;
    color: $canary-medium;
    box-shadow: 0px 0px 46px #ffaa007b;
  }
}

@mixin dark-btn {
  padding: 1rem 2.2rem 1rem 1.2rem;
  font-weight: 400;
  display: inline-flex;
  flex-flow: row nowrap;
  align-items: center;
  border-radius: 6px;
  font-size: 1.8rem;
  background-color: $black;
  color: $canary-medium;
  box-shadow: 0px 0px 36px #ffaa007b;
  filter: brightness(0.8);

  &:hover {
    color: $canary-dark;
    box-shadow: 0px 0px 36px #ffaa002a;
    filter: brightness(1);
  }
}



/* -------------------------------------------------------------------------- */
/*                                FLEX CHANGES                                */
/* -------------------------------------------------------------------------- */
@mixin flex-center {
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  justify-content: center;
}

/* -------------------------------------------------------------------------- */
/*                                  FUNCTIONS                                 */
/* -------------------------------------------------------------------------- */

@mixin btn($dark: false, $icon: false) {
  border-radius: 6px;
  font-size: 1.65rem;
  font-weight: 500;
  display: inline-flex;
  flex-flow: row nowrap;
  align-items: center;
  justify-content: flex-start;

  // set dark or light color of button
  @if $dark {
    background-image: none;
    background-color: $black;
    color: $canary-medium;
    box-shadow: 0px 0px 36px #ffaa007b;
  } @else {
    background-color: $black;
    background-image: linear-gradient(to bottom right, $canary-medium, $canary-dark);
    box-shadow: 6px 8px 16px #00000050;
    color: $black;
  }

  // Adjust padding if prefix icon present
  @if $icon {
    padding: 1rem 2.2rem 1rem 1.2rem;
    .material-icons {
      font-size: 1.4rem;
      margin-right: 0.5rem;
    }
  } @else { padding: 1rem 2.2rem; }
}

@mixin center-absolute(
  $direction, 
  $itemSize, 
  $containerSize) {
    position: absolute;
    @if (
      $direction == 'TD' or 
      $direction == 'td' or 
      $direction == 'top' or 
      $direction == 'down'
    ) { top: calc(($containerSize / 2) - ($itemSize / 2)); }
    @if (
      $direction == 'LR' or
      $direction == 'lr' or
      $direction == 'left' or
      $direction == 'right'
    ) { left: calc(($containerSize/2) - ($itemSize /2)); }
}


@mixin keyframeStyle($name) {
  @if ($name == 'spinner') {
    color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    &::after {
      animation: changeContent .8s linear infinite;
      display: block;
      content: "⠋";
    }
  }

  @if ($name == 'shake') {
    animation: shake 0.4s;
  }
}


/* -------------------------------- KEYFRAMES ------------------------------- */
@keyframes changeContent {
  10% { content: "⠙"; }
  20% { content: "⠹"; }
  30% { content: "⠸"; }
  40% { content: "⠼"; }
  50% { content: "⠴"; }
  60% { content: "⠦"; }
  70% { content: "⠧"; }
  80% { content: "⠇"; }
  90% { content: "⠏"; }
}

@keyframes shake {
  0% { transform: translate(1px, 1px) rotate(0deg); }
  10% { transform: translate(-1px, -2px) rotate(-1deg); }
  20% { transform: translate(-3px, 0px) rotate(1deg); }
  30% { transform: translate(3px, 2px) rotate(0deg); }
  40% { transform: translate(1px, -1px) rotate(1deg); }
  50% { transform: translate(-1px, 2px) rotate(-1deg); }
  60% { transform: translate(-3px, 1px) rotate(0deg); }
  70% { transform: translate(3px, 1px) rotate(-1deg); }
  80% { transform: translate(-1px, -1px) rotate(1deg); }
  90% { transform: translate(1px, 2px) rotate(0deg); }
  100% { transform: translate(1px, -2px) rotate(-1deg); }
}